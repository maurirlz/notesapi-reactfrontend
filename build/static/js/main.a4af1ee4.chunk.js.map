{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","request","Notification","message","Footer","style","footerStyle","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","e","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"oQAiBeA,EAfF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEZC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACI,oCACI,wBAAIC,UAAU,QACTJ,EAAKK,SAEV,4BAAQC,QAASL,GAAmBC,K,gBCX1CK,EAAU,kCAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAO,GAAO,OAAIA,EAAQL,SCJ5BM,EATM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEpB,OAAmB,OAAZA,EAAmB,KACtB,yBAAKf,UAAU,SACVe,ICYEC,EAhBA,WAQX,OACI,yBAAKC,MAAO,CAACC,YAPG,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,MAKN,6BACA,wGC8EGC,EArFH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,OAI0BN,mBAAS,MAJnC,mBAIPO,EAJO,KAIOC,EAJP,KAMdC,qBAAU,WACNC,IAEK3B,MAAK,SAAA4B,GACFT,EAASS,QAElB,IAEH,IAAMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAACxC,GAAD,OAAUA,EAAKG,aA6ClE,OACI,6BACI,qCACA,kBAAC,EAAD,CAAcgB,QAASe,IACvB,6BACI,4BAAQ5B,QAAS,kBAAM2B,GAAYD,KAAnC,QACUA,EAAU,YAAc,QAGtC,4BACKO,EAAYE,KAAI,SAACzC,EAAM0C,GAAP,OACb,kBAAC,EAAD,CAAMC,IAAKD,EACL1C,KAAMA,EACNC,iBAAkB,kBAnCb,SAACc,GAExB,IAAMf,EAAO4B,EAAMgB,MAAK,SAAAC,GAAC,OAAIA,EAAE9B,KAAOA,KAChC+B,EAAW,2BAAO9C,GAAP,IAAaG,WAAYH,EAAKG,YAE/CkC,EACYtB,EAAI+B,GACXpC,MAAK,SAAAqC,GACFlB,EAASD,EAAMa,KAAI,SAAAzC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO+C,SAEtDC,OAAM,SAAAC,GACHd,EAAgB,SAAD,OACFnC,EAAKK,QADH,uCAGf6C,YAAW,WACPf,EAAgB,QACjB,KAEHN,EAASD,EAAMY,QAAO,SAAAK,GAAC,OAAIA,EAAE9B,KAAOA,SAiBFoC,CAAmBnD,EAAKe,WAI9D,0BAAMqC,SA5DE,SAACC,GACbA,EAAMC,iBAEN,IAAMC,EAAa,CACflD,QAASyB,EACT0B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAG/BvB,EACYkB,GACP7C,MAAK,SAAAqC,GACFlB,EAASD,EAAMiC,OAAOd,IACtBhB,EAAW,SAgDX,2BAAO+B,MAAOhC,EAASiC,SA5CV,SAACV,GACtBtB,EAAWsB,EAAMW,OAAOF,UA4ChB,4BAAQG,KAAK,UAAb,SAEJ,kBAAC,EAAD,Q,MCjFZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a4af1ee4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n\n    const label = note.important ?\n        'make not important' : 'make important';\n\n    return (\n        <>\n            <li className='note'>\n                {note.content}\n            </li>\n            <button onClick={toggleImportance}>{label}</button>\n        </>\n    );\n};\n\nexport default Note;","import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/notes';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then(request => request.data);\n}\n\nexport default {\n    getAll,\n    create,\n    update\n}","import React from 'react';\n\nconst Notification = ({ message }) => {\n\n    return message === null ? null : (\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return (\n        <div style={{footerStyle}}>\n            <br />\n            <em>Note app, department of Computer Science, University of Helsinki 2020.</em>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState(\"\");\n    const [showAll, setShowAll] = useState(true);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes);\n            });\n    }, []);\n\n    const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n    const addNote = (event) => {\n        event.preventDefault();\n\n        const noteObject = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() < 0.5\n        };\n\n        noteService\n            .create(noteObject)\n            .then(returnedNote => {\n                setNotes(notes.concat(returnedNote));\n                setNewNote('');\n            });\n    };\n\n    const handleNoteChange = (event) => {\n        setNewNote(event.target.value);\n    };\n\n    const toggleImportanceOf = (id) => {\n\n        const note = notes.find(n => n.id === id);\n        const changedNote = {...note, important: !note.important};\n\n        noteService\n            .update(id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n            })\n            .catch(e => {\n                setErrorMessage(\n                    `Note '${note.content}' was already removed from server.`\n                )\n                setTimeout(() => {\n                    setErrorMessage(null);\n                }, 2000);\n\n                setNotes(notes.filter(n => n.id !== id));\n            })\n    }\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n            <ul>\n                {notesToShow.map((note, i) => (\n                    <Note key={i}\n                          note={note}\n                          toggleImportance={() => toggleImportanceOf(note.id)}\n                    />\n                ))}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange} />\n                <button type='submit'>save</button>\n            </form>\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}